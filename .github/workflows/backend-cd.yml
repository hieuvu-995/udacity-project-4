name: Backend CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    environment: Production Env

    steps:
    - name: Start setup Python
      uses: actions/checkout@v3

    - name: Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Setup Python Dependencies
      working-directory: ./starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run the Lint
      run: cd starter/backend && pipenv run lint

  Test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
    - name: Start setup Python
      uses: actions/checkout@v3

    - name: Setup Python 3.10
      uses:  actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Setup Python Dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Install Pytest
      run: pipenv install pytest
      
    - name: Run the Test
      run: pipenv run test  
    

  Build:
    runs-on: ubuntu-latest
    needs: [Lint, Test]
  
    steps:
    - name: Start setup Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: ${{ secrets.AWS_REGION }}
    # Login to AWS ECR  
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    # Build and push a Docker image
    - name: Build and Push Docker Image
      working-directory: starter/backend
      env:
        IMAGE_TAG: ${{ github.sha }}
        REPO_NAME: backend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 103245859808.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push 103245859808.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
    # Update Kubeconfig
    - name: Update the kubeconfig file
      run:
       aws eks update-kubeconfig --name cluster --region $AWS_REGION
    
    - name: Deploy the Image to Cluster
      working-directory: starter/backend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: backend
      run: |
        aws eks update-kubeconfig --name cluster --region $AWS_REGION
        kustomize edit set image backend=103245859808.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        kustomize build | kubectl apply -f -
