name: Frontend CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend
    environment: Production Env

    steps:
    - name: Setup the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 20-version
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'

    - name: Install Node.js Dependencies
      run: npm ci

    - name: Run Lint
      run: npm run lint

  Test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend

    steps:
    - name: Setup the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 20-version
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'
    - name: Install Node.js Dependencies
      run: npm ci
  
    - name: Run Test
      run: npm run test
      
  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup the Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js 20-version
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'

    - name: Build Docker Image
      run: |
        cd starter/frontend
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        docker run --name mp-frontend -p 3000:3000 -d mp-frontend

